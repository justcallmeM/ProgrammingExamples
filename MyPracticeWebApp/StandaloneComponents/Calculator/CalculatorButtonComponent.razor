
@if (IsDisabled)
{
    <img src="@($"../imgCalculator/{Id}{FileFormat}")"
        id="@($"calc-{Id}")" />
}
else
{
    <img src="@($"../imgCalculator/{Id}{FileFormat}")" 
        id="@($"calc-{Id}")" 
        @onclick="async () => { await SwitchImage(); }" />
}

@code {

    [Parameter]
    public EventCallback<int> ButtonClick { get; set; }

    [Parameter]
    public string Id { get; set; }

    private int SwitchDuration { get; set; } = 500;

    private string FileFormat { get; set; } = ".png";

    private bool IsDisabled = false;

    private async Task SwitchImage()
    {
        IsDisabled = true;

        FileFormat = ".gif";
        Id = "Animation" + Id;

        await Task.Delay(SwitchDuration);

        FileFormat = ".png";
        Id = Id.Substring("Animation".Length, Id.Length - "Animation".Length);

        await ButtonClick.InvokeAsync(ResolveButtonValue(Id));

        IsDisabled = false;
    }

    public int ResolveButtonValue(string Id)
    {
        return Id switch
        {
            "zero" => 0,
            "one" => 1,
            "two" => 2,
            "three" => 3,
            "four" => 4,
            "five" => 5,
            "six" => 6,
            "seven" => 7,
            "eight" => 8,
            "nine" => 9,
            _ => 1//throw new Exception()
        };
    }
}
